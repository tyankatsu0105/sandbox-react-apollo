name: Deploy Client

on:
  push:
    branches:
      - 'master'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: asdf

      - name: Use Node.js ${{ steps.asdf.outputs.nodejs }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.asdf.outputs.nodejs }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build Client
        run: npm run build client -- --prod
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          NODE_ENV: production

      - name: Build Netlify function
        run: npm run build:netlify-lambda apps/api/src
        # env:
        #   OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
        #   OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          NODE_ENV: production

      # - name: Build Netlify function
      #   env:
      #     OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      #     OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      #   uses: netlify/actions/cli@master
      #   with:
      #     args: build -c ./apps/api/webpack.config.js

      - name: Deploy
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=dist/apps/client -p
